[package]
name = "tiles-3d-rs"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "tutorial1-window"
path = "src/main.rs"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
cfg-if = "1.0.0"
env_logger = "0.9.0"
log = "0.4.16"
wasm-bindgen-futures = "0.4.30"
wgpu = "0.12.0"
winit = "0.26.1"

# This üëáüèª line tells cargo to only include these dependencies if we are targeting the wasm32 architecture
[target.'cfg(target_arch = "wasm32")'.dependencies]
# Configures the panic! macro to send errors to the javascript console. Without this when you encounter panics, you'll be left in the dark for what caused them.
console_error_panic_hook = "0.1.6"
console_log = "0.2.0"
# Could use without out this if we use Firefox Nightly or Chrome Canary which have support for WebGPU already
wgpu = { version = "0.12", features = ["webgl"]}
# It's responsible for generating the boilerplate code that will tell the browser how to use our crate. 
# It also allows us to expose methods in Rust that will can be used in Javascript, and vice-versa.
wasm-bindgen = "0.2.76"
# Is a crate that includes many methods and structures that are available in a normal javascript application
web-sys = { version = "0.3.53", features = [
    "Document",
    "Window",
    "Element",
]}
 
